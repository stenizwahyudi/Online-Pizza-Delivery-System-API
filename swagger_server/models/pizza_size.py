# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class PizzaSize(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, pizza_sizes_id: int=None, name: str=None, measurement: float=None, size_price: float=None):  # noqa: E501
        """PizzaSize - a model defined in Swagger

        :param pizza_sizes_id: The pizza_sizes_id of this PizzaSize.  # noqa: E501
        :type pizza_sizes_id: int
        :param name: The name of this PizzaSize.  # noqa: E501
        :type name: str
        :param measurement: The measurement of this PizzaSize.  # noqa: E501
        :type measurement: float
        :param size_price: The size_price of this PizzaSize.  # noqa: E501
        :type size_price: float
        """
        self.swagger_types = {
            'pizza_sizes_id': int,
            'name': str,
            'measurement': float,
            'size_price': float
        }

        self.attribute_map = {
            'pizza_sizes_id': 'pizza_sizes_id',
            'name': 'name',
            'measurement': 'measurement',
            'size_price': 'size_price'
        }
        self._pizza_sizes_id = pizza_sizes_id
        self._name = name
        self._measurement = measurement
        self._size_price = size_price

    @classmethod
    def from_dict(cls, dikt) -> 'PizzaSize':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PizzaSize of this PizzaSize.  # noqa: E501
        :rtype: PizzaSize
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pizza_sizes_id(self) -> int:
        """Gets the pizza_sizes_id of this PizzaSize.

        The Id of a pizza size.   # noqa: E501

        :return: The pizza_sizes_id of this PizzaSize.
        :rtype: int
        """
        return self._pizza_sizes_id

    @pizza_sizes_id.setter
    def pizza_sizes_id(self, pizza_sizes_id: int):
        """Sets the pizza_sizes_id of this PizzaSize.

        The Id of a pizza size.   # noqa: E501

        :param pizza_sizes_id: The pizza_sizes_id of this PizzaSize.
        :type pizza_sizes_id: int
        """

        self._pizza_sizes_id = pizza_sizes_id

    @property
    def name(self) -> str:
        """Gets the name of this PizzaSize.

        The string name of a pizza size.   # noqa: E501

        :return: The name of this PizzaSize.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this PizzaSize.

        The string name of a pizza size.   # noqa: E501

        :param name: The name of this PizzaSize.
        :type name: str
        """

        self._name = name

    @property
    def measurement(self) -> float:
        """Gets the measurement of this PizzaSize.

        The diagonal inches for the pizza size.   # noqa: E501

        :return: The measurement of this PizzaSize.
        :rtype: float
        """
        return self._measurement

    @measurement.setter
    def measurement(self, measurement: float):
        """Sets the measurement of this PizzaSize.

        The diagonal inches for the pizza size.   # noqa: E501

        :param measurement: The measurement of this PizzaSize.
        :type measurement: float
        """

        self._measurement = measurement

    @property
    def size_price(self) -> float:
        """Gets the size_price of this PizzaSize.

        The extra price on the order for choosing this pizza size.   # noqa: E501

        :return: The size_price of this PizzaSize.
        :rtype: float
        """
        return self._size_price

    @size_price.setter
    def size_price(self, size_price: float):
        """Sets the size_price of this PizzaSize.

        The extra price on the order for choosing this pizza size.   # noqa: E501

        :param size_price: The size_price of this PizzaSize.
        :type size_price: float
        """

        self._size_price = size_price
