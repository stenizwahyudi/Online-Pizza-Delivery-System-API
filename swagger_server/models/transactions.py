# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Transactions(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, pizza_receipt_id: str=None, pizza_order_id: str=None, name: str=None, card_number: str=None, card_cvc: str=None, card_expiration_year: str=None, card_expiration_month: str=None, card_billing_address: str=None, city: str=None, state: str=None, zip_code: str=None, phone_number: str=None, order_time: datetime=None):  # noqa: E501
        """Transactions - a model defined in Swagger

        :param pizza_receipt_id: The pizza_receipt_id of this Transactions.  # noqa: E501
        :type pizza_receipt_id: str
        :param pizza_order_id: The pizza_order_id of this Transactions.  # noqa: E501
        :type pizza_order_id: str
        :param name: The name of this Transactions.  # noqa: E501
        :type name: str
        :param card_number: The card_number of this Transactions.  # noqa: E501
        :type card_number: str
        :param card_cvc: The card_cvc of this Transactions.  # noqa: E501
        :type card_cvc: str
        :param card_expiration_year: The card_expiration_year of this Transactions.  # noqa: E501
        :type card_expiration_year: str
        :param card_expiration_month: The card_expiration_month of this Transactions.  # noqa: E501
        :type card_expiration_month: str
        :param card_billing_address: The card_billing_address of this Transactions.  # noqa: E501
        :type card_billing_address: str
        :param city: The city of this Transactions.  # noqa: E501
        :type city: str
        :param state: The state of this Transactions.  # noqa: E501
        :type state: str
        :param zip_code: The zip_code of this Transactions.  # noqa: E501
        :type zip_code: str
        :param phone_number: The phone_number of this Transactions.  # noqa: E501
        :type phone_number: str
        :param order_time: The order_time of this Transactions.  # noqa: E501
        :type order_time: datetime
        """
        self.swagger_types = {
            'pizza_receipt_id': str,
            'pizza_order_id': str,
            'name': str,
            'card_number': str,
            'card_cvc': str,
            'card_expiration_year': str,
            'card_expiration_month': str,
            'card_billing_address': str,
            'city': str,
            'state': str,
            'zip_code': str,
            'phone_number': str,
            'order_time': datetime
        }

        self.attribute_map = {
            'pizza_receipt_id': 'pizza_receipt_id',
            'pizza_order_id': 'pizza_order_id',
            'name': 'name',
            'card_number': 'card_number',
            'card_cvc': 'card_cvc',
            'card_expiration_year': 'card_expiration_year',
            'card_expiration_month': 'card_expiration_month',
            'card_billing_address': 'card_billing_address',
            'city': 'city',
            'state': 'state',
            'zip_code': 'zip_code',
            'phone_number': 'phone_number',
            'order_time': 'order_time'
        }
        self._pizza_receipt_id = pizza_receipt_id
        self._pizza_order_id = pizza_order_id
        self._name = name
        self._card_number = card_number
        self._card_cvc = card_cvc
        self._card_expiration_year = card_expiration_year
        self._card_expiration_month = card_expiration_month
        self._card_billing_address = card_billing_address
        self._city = city
        self._state = state
        self._zip_code = zip_code
        self._phone_number = phone_number
        self._order_time = order_time

    @classmethod
    def from_dict(cls, dikt) -> 'Transactions':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Transactions of this Transactions.  # noqa: E501
        :rtype: Transactions
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pizza_receipt_id(self) -> int:
        """Gets the pizza_receipt_id of this Transactions.

        The ID of the receipt  # noqa: E501

        :return: The pizza_receipt_id of this Transactions.
        :rtype: int
        """
        return self._pizza_receipt_id

    @pizza_receipt_id.setter
    def pizza_receipt_id(self, pizza_receipt_id: int):
        """Sets the pizza_receipt_id of this Transactions.

        The ID of the receipt  # noqa: E501

        :param pizza_receipt_id: The pizza_receipt_id of this Transactions.
        :type pizza_receipt_id: int
        """

        self._pizza_receipt_id = pizza_receipt_id

    @property
    def pizza_order_id(self) -> int:
        """Gets the pizza_order_id of this Transactions.

        The ID of the orders in receipts  # noqa: E501

        :return: The pizza_order_id of this Transactions.
        :rtype: int
        """
        return self._pizza_order_id

    @pizza_order_id.setter
    def pizza_order_id(self, pizza_order_id: int):
        """Sets the pizza_order_id of this Transactions.

        The ID of the orders in receipts  # noqa: E501

        :param pizza_order_id: The pizza_order_id of this Transactions.
        :type pizza_order_id: int
        """

        self._pizza_order_id = pizza_order_id

    @property
    def name(self) -> str:
        """Gets the name of this Transactions.

        The name of the customer.   # noqa: E501

        :return: The name of this Transactions.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Transactions.

        The name of the customer.   # noqa: E501

        :param name: The name of this Transactions.
        :type name: str
        """

        self._name = name

    @property
    def card_number(self) -> str:
        """Gets the card_number of this Transactions.

        The card number.   # noqa: E501

        :return: The card_number of this Transactions.
        :rtype: str
        """
        return self._card_number

    @card_number.setter
    def card_number(self, card_number: str):
        """Sets the card_number of this Transactions.

        The card number.   # noqa: E501

        :param card_number: The card_number of this Transactions.
        :type card_number: str
        """

        self._card_number = card_number

    @property
    def card_cvc(self) -> str:
        """Gets the card_cvc of this Transactions.

        The card cvc number.   # noqa: E501

        :return: The card_cvc of this Transactions.
        :rtype: str
        """
        return self._card_cvc

    @card_cvc.setter
    def card_cvc(self, card_cvc: str):
        """Sets the card_cvc of this Transactions.

        The card cvc number.   # noqa: E501

        :param card_cvc: The card_cvc of this Transactions.
        :type card_cvc: str
        """

        self._card_cvc = card_cvc

    @property
    def card_expiration_year(self) -> str:
        """Gets the card_expiration_year of this Transactions.

        The expiration year of the card.   # noqa: E501

        :return: The card_expiration_year of this Transactions.
        :rtype: str
        """
        return self._card_expiration_year

    @card_expiration_year.setter
    def card_expiration_year(self, card_expiration_year: str):
        """Sets the card_expiration_year of this Transactions.

        The expiration year of the card.   # noqa: E501

        :param card_expiration_year: The card_expiration_year of this Transactions.
        :type card_expiration_year: str
        """

        self._card_expiration_year = card_expiration_year

    @property
    def card_expiration_month(self) -> str:
        """Gets the card_expiration_month of this Transactions.

        The expiration month of the card.   # noqa: E501

        :return: The card_expiration_month of this Transactions.
        :rtype: str
        """
        return self._card_expiration_month

    @card_expiration_month.setter
    def card_expiration_month(self, card_expiration_month: str):
        """Sets the card_expiration_month of this Transactions.

        The expiration month of the card.   # noqa: E501

        :param card_expiration_month: The card_expiration_month of this Transactions.
        :type card_expiration_month: str
        """

        self._card_expiration_month = card_expiration_month

    @property
    def card_billing_address(self) -> str:
        """Gets the card_billing_address of this Transactions.

        The billing address of the card.   # noqa: E501

        :return: The card_billing_address of this Transactions.
        :rtype: str
        """
        return self._card_billing_address

    @card_billing_address.setter
    def card_billing_address(self, card_billing_address: str):
        """Sets the card_billing_address of this Transactions.

        The billing address of the card.   # noqa: E501

        :param card_billing_address: The card_billing_address of this Transactions.
        :type card_billing_address: str
        """

        self._card_billing_address = card_billing_address

    @property
    def city(self) -> str:
        """Gets the city of this Transactions.

        The city of the billing address.   # noqa: E501

        :return: The city of this Transactions.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city: str):
        """Sets the city of this Transactions.

        The city of the billing address.   # noqa: E501

        :param city: The city of this Transactions.
        :type city: str
        """

        self._city = city

    @property
    def state(self) -> str:
        """Gets the state of this Transactions.

        The state of the billing address.   # noqa: E501

        :return: The state of this Transactions.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state: str):
        """Sets the state of this Transactions.

        The state of the billing address.   # noqa: E501

        :param state: The state of this Transactions.
        :type state: str
        """

        self._state = state

    @property
    def zip_code(self) -> str:
        """Gets the zip_code of this Transactions.

        The zip code of the billing address.   # noqa: E501

        :return: The zip_code of this Transactions.
        :rtype: str
        """
        return self._zip_code

    @zip_code.setter
    def zip_code(self, zip_code: str):
        """Sets the zip_code of this Transactions.

        The zip code of the billing address.   # noqa: E501

        :param zip_code: The zip_code of this Transactions.
        :type zip_code: str
        """

        self._zip_code = zip_code

    @property
    def phone_number(self) -> str:
        """Gets the phone_number of this Transactions.

        The phone number of the customer.   # noqa: E501

        :return: The phone_number of this Transactions.
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number: str):
        """Sets the phone_number of this Transactions.

        The phone number of the customer.   # noqa: E501

        :param phone_number: The phone_number of this Transactions.
        :type phone_number: str
        """

        self._phone_number = phone_number

    @property
    def order_time(self) -> datetime:
        """Gets the order_time of this Transactions.

        Time the receipt is generated  # noqa: E501

        :return: The order_time of this Transactions.
        :rtype: datetime
        """
        return self._order_time

    @order_time.setter
    def order_time(self, order_time: datetime):
        """Sets the order_time of this Transactions.

        Time the receipt is generated  # noqa: E501

        :param order_time: The order_time of this Transactions.
        :type order_time: datetime
        """

        self._order_time = order_time
